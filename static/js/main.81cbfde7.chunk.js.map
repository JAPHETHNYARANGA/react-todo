{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA4DeA,MA1Df,SAAkBC,GAAQ,IAAD,EACGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD5C,mBAChBC,EADgB,KACTC,EADS,KAGjBC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAAAC,GACnBP,EAASO,EAAEC,OAAOV,QAGdW,EAAe,SAAAF,GACnBA,EAAEG,iBAEFf,EAAMgB,SAAS,CACbC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAERC,EAAS,KAGX,OACE,sBAAMW,SAAUF,EAAcQ,UAAU,YAAxC,SACGtB,EAAME,KACL,qCACE,uBACEqB,YAAY,mBACZpB,MAAOC,EACPoB,SAAUb,EACVc,KAAK,OACLC,IAAKpB,EACLgB,UAAU,oBAEZ,wBAAQK,QAASb,EAAcQ,UAAU,mBAAzC,uBAKF,qCACE,uBACEC,YAAY,aACZpB,MAAOC,EACPoB,SAAUb,EACVc,KAAK,OACLH,UAAU,aACVI,IAAKpB,IAEP,wBAAQqB,QAASb,EAAcQ,UAAU,cAAzC,4B,eChBKM,MA9Bf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACpC/B,mBAAS,CAC5BgB,GAAG,KACHd,MAAM,KAHiD,mBACrDD,EADqD,KAC/C+B,EAD+C,KAY3D,OAAG/B,EAAKe,GACG,cAAC,EAAD,CAAUf,KAAMA,EAAMc,SARZ,SAAAb,GACjB6B,EAAW9B,EAAKe,GAAId,GACpB8B,EAAQ,CACJhB,GAAG,KACHd,MAAM,QAMP0B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKd,UAAWa,EAAKE,WAAa,oBAAqB,WAAvD,UACJ,qBAAmBV,QAAS,kBAAMG,EAAaK,EAAKlB,KAApD,SACCkB,EAAKd,MADIc,EAAKlB,IAGf,sBAAKK,UAAU,QAAf,UACA,cAAC,IAAD,CAAmBK,QAAS,kBAAII,EAAWI,EAAKlB,KAChDK,UAAU,gBACV,cAAC,IAAD,CAAQK,QAAS,kBAAKM,EAAS,CAAEhB,GAAIkB,EAAKlB,GAAId,MAAOgC,EAAKd,QAC1DC,UAAU,mBARkEc,OC2BjEE,MA5Cf,WAAqB,IAAD,EACUrC,mBAAS,IADnB,mBACT4B,EADS,KACFU,EADE,KAkChB,OACI,gCACE,6DACA,cAAC,EAAD,CAAUvB,SAnCA,SAAAmB,GACZ,GAAIA,EAAKd,OAAQ,QAAQmB,KAAKL,EAAKd,MAAnC,CAGA,IAAMoB,EAAQ,CAAIN,GAAJ,mBAAaN,IAE3BU,EAASE,OA8BP,cAAC,EAAD,CAAMZ,MAAOA,EAAOC,aAZT,SAAAb,GAAO,IAAIyB,EAAeb,EAAMK,KAAI,SAAAC,GAIrD,OAHGA,EAAKlB,KAAMA,IACVkB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXI,EAASG,IAMiDX,WAlBvC,SAAAd,GAAO,IAAM0B,EAAY,YAAId,GAAOe,QAAO,SAAAT,GAAI,OAAIA,EAAKlB,KAAOA,KAClFsB,EAASI,IAiByEX,WA1BhE,SAACa,EAAQC,GACnBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAGvCkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKb,KAAI,SAAAc,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCR5DC,MARf,WACE,OACE,qBAAK3B,UAAU,WAAf,SACE,cAAC,EAAD,OCDN4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.81cbfde7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;","import React,{useState} from 'react';\nimport TodoForm from './TodoForm';\nimport {RiCloseCircleLine} from 'react-icons/ri';\nimport {TiEdit} from 'react-icons/ti';\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n    const[edit, setEdit] = useState({\n        id:null,\n        value:''\n    });\n    const submitUpdate = value =>{\n        updateTodo(edit.id, value)\n        setEdit({\n            id:null,\n            value:''\n        });\n    };\n    if(edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\n    }\n    return todos.map((todo, index)=> (\n        <div className={todo.isComplete ? 'todo-row complete' :'todo-row'} key={index}>\n    <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n    {todo.text}\n    </div>\n    <div className=\"icons\">\n    <RiCloseCircleLine onClick={()=>removeTodo(todo.id)}\n    className='delete-icon' />\n    <TiEdit onClick={()=> setEdit ({ id: todo.id, value: todo.text})}\n    className='edit-icon' />\n    </div>\n        </div>\n    ));\n}\n\nexport default Todo\n","import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n    const addTodo = todo => {\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos);\n      \n    };\n    \nconst updateTodo =(todoId, newValue) =>{\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n        };\n\n\nconst removeTodo = id => {const removeArr = [...todos].filter(todo => todo.id !== id);\nsetTodos(removeArr);\n\n};\n\n\nconst completeTodo = id =>{ let updatedTodos = todos.map(todo =>{\n    if(todo.id ===id){\n        todo.isComplete = !todo.isComplete;\n    }\n    return todo;\n});\nsetTodos(updatedTodos);\n};\n    return (\n        <div>\n          <h1> what's the plan for today?</h1>\n          <TodoForm onSubmit={addTodo} />  \n          <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\n          \n        </div>\n    )\n}\n\nexport default TodoList\n","import React from \"react\";\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}